using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the formingMagicSquare function below.
    static int formingMagicSquare(int[][] s) {
        int[][] T= new int[3][3];
        T[0][0] = 4;T[0][1] = 9;T[0][2] = 2;
        T[1][0] = 3;T[1][1] = 5;T[1][2] = 7;
        T[2][0] = 8;T[2][1] = 1;T[2][2] = 6;
        int minDiff=9999;
        int diff=0;

        diff=Diff(s,T);
        if(diff<minDiff)
            minDiff=diff;

        T=Rotate(T)
        diff=Diff(s,T);
        if(diff<minDiff)
            minDiff=diff;

        T=Rotate(T)
        diff=Diff(s,T);
        if(diff<minDiff)
            minDiff=diff;

        T=Rotate(T)
        diff=Diff(s,T);
        if(diff<minDiff)
            minDiff=diff;
        
        T=Mirror(T);

        diff=Diff(s,T);
        if(diff<minDiff)
            minDiff=diff;

        T=Rotate(T)
        diff=Diff(s,T);
        if(diff<minDiff)
            minDiff=diff;

        T=Rotate(T)
        diff=Diff(s,T);
        if(diff<minDiff)
            minDiff=diff;

        T=Rotate(T)
        diff=Diff(s,T);
        if(diff<minDiff)
            minDiff=diff;
        
        return minDiff;
    }


    static int[][] Rotate(int[][] X)
    {
        int[][] Y = new int[3][3];
        int ni=0;
        for(int i=0;i<3;i++)
        {
            if(i%2==0)
                ni=(i+2)%4;
            else if(i==1)
                ni=i;
            for(int j=0;j<3;j++)
            {
                Y[j][ni] = X[i][j];
            }
        }
    }

    static int[][] Mirror(int[][] X)
    {
        int[][] Y = new int[3][3];
        for(int i=0;i<3;i++)
        {
            if(i==1)
                continue;
            int ni = (i+2)%4;
            for(int j=0;j<3;j++)
            {
                Y[ni][j]=X[i][j];
            }
        }
    }

    static int Diff(int[][] X,int[][] Y)
    {
        int ans=0;
        for(i=0;i<3;i++)
            for(j=0;j<3;j++)
                ans+=Math.abs(X[i][j]-Y[i][j]);
        return ans;
    }


    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int[][] s = new int[3][];

        for (int i = 0; i < 3; i++) {
            s[i] = Array.ConvertAll(Console.ReadLine().Split(' '), sTemp => Convert.ToInt32(sTemp));
        }

        int result = formingMagicSquare(s);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
